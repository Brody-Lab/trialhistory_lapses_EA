function[bias] = compute_history_bias(prm, choices, outcomes, tr)

%{

computes history bias assuming biases due to correct and incorrect trials
are forgotten exponentially, independent of each other i.e. there is a
ditinct timescale with which biases due to correct trials are forgotten and
those due to incorrect trials are forgotten.
Assumed that the bias due to a leftward trial is opposite of that due to
the rightward trial.

prm is a struct generated by make_history_params with following fields:
etaC: magnitude of bias following a correct right choice
etaE: magnitude of bias following an incorrect right choice
tauC: exponential decay param for correct trials (between 0 and 1)
tauE: exponential decay param for incorrect trials (between 0 and 1)

tr is the trial number for which bias is being computed

%}



lim = max(1, tr-100):tr-1;
comp_hist = @(c, o, eta, tau) double(choices(lim) == c & outcomes(lim) == o) .* eta .* (tau.^(length(lim)-1:-1:0));
bias = sum((comp_hist(1, 1, prm.etaC, prm.tauC) + comp_hist(1, 0, prm.etaE, prm.tauE)) ...
    -(comp_hist(0, 1, prm.etaC, prm.tauC) + comp_hist(0, 0, prm.etaE, prm.tauE)));
end